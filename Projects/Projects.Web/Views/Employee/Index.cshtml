@model PagedList.IPagedList<Projects.Web.Models.Entities.EmployeeVM>
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Сотрудники";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="block">
    <h2 class="block-title">Сотрудники</h2>

    @Html.AntiForgeryToken()

    <p>
        <a type="button" class="btn btn-success" href="@Url.Action("Create", "Employee")"> <i class="fa fa-plus"></i> Добавить новую запись</a>
    </p>

    @using (Ajax.BeginForm("SearchMethod", "Search", null,
    new AjaxOptions
    {
        UpdateTargetId = "results",
        LoadingElementId = "loading",
        OnSuccess = "hideAccordion()"
    },
    new { @class = "ajax-form", @id = "ajax-form" }))
    {
        <input type="hidden" name="type" value="employee" />

        <div class="input-group mb-3">
            <input type="text" id="xyz-search-input" name="title" class="form-control" placeholder="Введите ФИО сотрудника" autocomplete="off" required>
            <div class="input-group-append">
                <button type="submit" class="btn btn-info"><span class="fa fa-search"></span> Искать <span id="loading" class="loading" style="display:none"><svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.0" width="16px" height="16px" viewBox="0 0 128 128" xml:space="preserve"><g transform="rotate(352.65 64.0001 64.0001)"><linearGradient id="linear-gradient"><stop offset="0%" stop-color="#ffffff"></stop><stop offset="100%" stop-color="#454445"></stop></linearGradient><path d="M63.85 0A63.85 63.85 0 1 1 0 63.85 63.85 63.85 0 0 1 63.85 0zm.65 19.5a44 44 0 1 1-44 44 44 44 0 0 1 44-44z" fill="url(#linear-gradient)" fill-rule="evenodd"></path><animateTransform attributeName="transform" type="rotate" from="0 64 64" to="360 64 64" dur="1080ms" repeatCount="indefinite"></animateTransform></g></svg></span></button>
            </div>
        </div>
    }

    <div id="results" class="content"></div>

    <div class="content" id="accordion">
        <table class="table table-responsive-sm table-responsive-md table-responsive-lg table-sm" id="listTable">
            <thead>
                <tr>
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(model => model.First().FullName).ToHtmlString(), "Index", new { sortOrder = ViewBag.NameSortParam })
                    </th>
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(model => model.First().ExecutorCompanyId).ToHtmlString(), "Index", new { sortOrder = ViewBag.ExecutorCompanySortParam })
                    </th>
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(model => model.First().PositionId).ToHtmlString(), "Index", new { sortOrder = ViewBag.PositionSortParam })
                    </th>
                    <th>@Html.DisplayNameFor(model => model.First().Phone)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Email)</th>
                    <th>@Html.DisplayNameFor(model => model.First().DateBorn)</th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr id="@item.Id">
                        <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                        <td>@Html.DisplayFor(modelItem => item.ExecutorCompany.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Position.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <td>@Html.DisplayFor(modelItem => item.DateBorn)</td>

                        <td>
                            @*@if (User.IsInRole("admin"))
                                {*@
                            <div class="btn-group float-right" role="group">
                                <a class="btn btn-info btn-action" name="editButton" id="editButton" href="@Url.Action("Edit", "Employee", new { id = item.Id })"><i class="fa fa-pencil" aria-hidden="true" title="Редактировать" data-toggle="tooltip" data-placement="top"></i><span class="hidden-text"> Редактировать</span></a>
                                <a class="btn btn-warning btn-action" name="detailsButton" id="detailsButton" href="@Url.Action("Details", "Employee", new { id = item.Id })"><i class="fa fa-eye" aria-hidden="true" title="Просмотреть" data-toggle="tooltip" data-placement="top"></i><span class="hidden-text"> Просмотреть</span></a>
                                <a class="btn btn-danger delete-prompt btn-action" name="deleteButton" id="@item.Id"><i class="fa fa-trash" aria-hidden="true" title="Удалить" data-toggle="tooltip" data-placement="top"></i><span class="hidden-text"> Удалить</span></a>
                            </div>
                            @*}
                                else if (User.IsInRole("manager"))
                                {
                                    <div class="btn-group float-right" role="group">
                                        <a class="btn btn-info" name="editButton" id="editButton" href="@Url.Action("Edit", "QuestionType", new { id = item.Id })"><i class="fa fa-pencil" aria-hidden="true" title="Редактировать" data-toggle="tooltip" data-placement="top"></i> Редактировать</a>
                                        <a class="btn btn-warning" name="detailsButton" id="detailsButton" href="@Url.Action("Details", "QuestionType", new { id = item.Id })"><i class="fa fa-eye" aria-hidden="true" title="Просмотреть" data-toggle="tooltip" data-placement="top"></i> Просмотреть</a>
                                    </div>
                                }*@
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div id="result"> </div>

        <div id="paginationToDelete">
            @Html.PagedListPager(Model, page => Url.Action("AjaxEmployeeList", new { sortOrder = ViewBag.CurrentSort, page }),
                  PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "result", OnSuccess = "removeListAndPagination()" }))

            @if (!(Model.PageCount <= 0))
            {
                <p class="pagination-info">Страница @Model.PageNumber из @Model.PageCount</p>
            }
        </div>
    </div>
</div>

<!-- Bootstrap modal popup -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Удаление</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p class="success-message"> Вы действительно хотите удалить запись? </p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger delete-confirm">Да</button>
                <button class="btn btn-default delete-cancel" data-dismiss="modal">Нет</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        modalRemovalWindow('/Employee/Delete');
        pagination();
    </script>
}
